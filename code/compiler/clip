LDC 0
LDC 1
CONS
LDF 138
AP 0
LDF 117
AP 2
RTN
LD 0 0    ; def IS_VALUABLE
LDC 2 ; check pill
CEQ
TSEL 20 12
LD 0 0 ; $NOT_PILL
LDC 3 ; check power_pill
CEQ
TSEL 20 16
LD 0 0 ; $NOT_POWER_PILL
LDC 4 ; check fruit
CEQ
TSEL 20 22
LDC 1 ; $RTN_TRUE
RTN
LDC 0 ; $RTN_FALSE
RTN
LD 0 1 ;(x+1, y) RIGHT POINT    ; def GET_VALUABLE_NEIGHBOR
CAR ;x
LDC 1
ADD ; x + 1
LD 0 1
CDR ;y
CONS
LD 0 0 ; get map
LD 0 1 ;(2, 2) one more time
CAR ;x
LDC 1
ADD ; x + 1
LD 0 1
CDR ;y
CONS
LDF 107
AP 2
LDF 8
AP 1
TSEL 44 45
RTN ; $RTN
LD 0 1 ; $NOT_RIGHT
CAR ;x
LD 0 1 ; (x, y+1) DOWN
CDR ;y
LDC 1
ADD
CONS
LD 0 0 ; get map
LD 0 1
CAR ;x
LD 0 1 ; (x, y+1) one more time
CDR ;y
LDC 1
ADD
CONS
LDF 107
AP 2
LDF 8
AP 1
TSEL 44 65
LD 0 1 ; $NOT_DOWN
CAR ;x
LDC 1
SUB
LD 0 1
CDR ;y
CONS
LD 0 0
LD 0 1 ;(x-1, y) LEFT
CAR ;x
LDC 1
SUB
LD 0 1
CDR ;y
CONS
LDF 107
AP 2
LDF 8
AP 1
TSEL 44 85
LD 0 1 ; $NOT_LEFT
CAR ;x
LD 0 1 ;(x, y-1)
CDR ;y
LDC 1
SUB
CONS
LD 0 0 ; get map
LD 0 1
CAR ;x
LD 0 1 ; (x, y-1) UP
CDR ;y
LDC 1
SUB
CONS
LDF 107
AP 2
LDF 8
AP 1
TSEL 44 105
LD 0 1 ; $RTN_SELF
RTN
LD 0 0 ; map    ; def MAP_AT
LD 0 1 ; pos
CDR    ; pos.y
LDF 126
AP 2
LD 0 1 ; pos
CAR    ; pos.x
LDF 126
AP 2
RTN
LD 0 1    ; def TEST_GET_VALUABLE_NEIGHBOR
LDC 0
LDF 126
AP 2
LDC 1
LDC 1
CONS
LDF 24
AP 2
LD 0 1 ; index    ; def LIST_VAL_AT
TSEL 128 135 ; index != 0
LD 0 0 ; $NEXT
CDR
LD 0 1
LDC 1
SUB
LDF 126
TAP 2
LD 0 0 ; $RTN
CAR
RTN
LDC 0    ; def LOAD_DATA1
LDC 0
LDC 0
LDC 0
CONS
CONS
CONS
LDC 0
LDC 5
LDC 0
LDC 0
CONS
CONS
CONS
LDC 0
LDC 0
LDC 0
LDC 0
CONS
CONS
CONS
LDC 0
CONS
CONS
CONS
LDC 0
LDC 1
LDC 1
CONS
LDC 2
LDC 3
LDC 0
CONS
CONS
CONS
CONS
LDC 0
LDC 0
CONS
CONS
CONS
RTN
 
