; args: 2d_array (map), neighbors, visited_neighs, 1 local vars
; return: dir

!def ld_map        LD 0 0
!def ld_neighbors  LD 0 1
!def ld_visited    LD 0 2
!def st_visited    ST 0 2
!def ld_loc_tasty  LD 0 3
!def st_loc_tasty  ST 0 3

#ld_neighbors
LDF @neighbor_accum_valuable
LDC 0
LDF @reduce
AP 3

#st_loc_tasty
#ld_loc_tasty

ATOM ; test for empty valuable neighs
TSEL $empty $some
$empty:
    #ld_map ; used for the recursive call of map_walk

    ; filter walkable neighs
    #ld_neighbors
    LDF @neighbor_accum_walkable
    LDC 0
    LDF @reduce
    AP 3
    ; get neighbors of walkable neighbors

    #call_copy ; add walkable neighbors to visited
    LDF @concat_accum
    #ld_visited
    LDF @reduce
    AP 3
    #st_visited

    LDF @neighbor_accum_neighbors ; load new neighbors
    LDC 0
    LDF @reduce
    AP 3

    LDF @neighbor_accum_not_visited ; remove visited ones
    LDC 0
    LDF @reduce
    AP 3

    #ld_visited

    LDC 0 ; just for local var
    LDF @map_walk
    AP 4

    RTN
$some:
    #ld_loc_tasty
    CAR
    CDR
    CDR
    RTN
